# -*- coding: utf-8 -*-
"""File_from_GitHub.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sioWU-PV0nXpak8pK-n1LkzOeKkMEZEe
"""

import pandas as pd

#Normal_File
raw = 'https://raw.githubusercontent.com/'
url = raw + 'FedeGambe/Vehicle_Price_Monitor/main/Materiali/Data/gi_comuni_cap.csv'
df = pd.read_csv(url, delimiter=';')

#########################################################################################################
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#########################################################################################################

#Zipped_File
import zipfile
import os
import requests
from io import BytesIO

url = "https://github.com/FedeGambe/Bitcoin_Prediction/raw/main/Materiali/Datasets.zip"
response = requests.get(url) # Scarica il file ZIP

if response.status_code == 200: #check per vedere se è avvenuto con successo
    with zipfile.ZipFile(BytesIO(response.content)) as zip_ref: #temp folder per la decompressione
        zip_ref.extractall("cartella_decompressa") #estrazione file

        extracted_files = zip_ref.namelist() # Lista dei file estratti
        print(f"File estratti: {extracted_files}")

        csv_file_name = "merged_fix_to_hour.csv" #file da estrarre
        if csv_file_name in extracted_files:
            csv_file_path = os.path.join("cartella_decompressa", csv_file_name)
            data_merged = pd.read_csv(csv_file_path)
            print(f"\nPrimi 5 record del CSV '{csv_file_name}':")
            print(data_merged.head())
        else:
            print(f"Il file {csv_file_name} non è stato trovato nella cartella decompressa.")
else:
    print("Errore nel download del file ZIP.")
